name: MLOps best practices (Continuos Integration)

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest test

    - name: Build docker image
      run: |
        docker build -t churn-prediction:latest .

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: mlchurnprediction.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD1 }}
    
    - name: Tag the image with ACR URL
      run: |
        docker tag churn-prediction:latest mlchurnprediction.azurecr.io/churn-prediction:latest

    - name: Push image to Azure Container Registry
      run: |
        docker push mlchurnprediction.azurecr.io/churn-prediction:latest

  deploy:
      needs: build
      runs-on: ubuntu-latest

      steps:
          - name: Checkout Repository
            uses: actions/checkout@v2
          
          - name: Set up Azure CLI
            uses: azure/login@v1
            with:
              creds: ${{ secrets.AZURE_CREDINTALS }}

          - name: Configure kubectl
            run: |
              echo ${{ secrets.AZURE_KUBECONFIG }} > kubeconfig.yaml
              export KUBECONFIG=./kubeconfig.yaml

          - name: Install kubectl
            run: |
              sudo apt-get update && sudo apt-get install -y apt-transport-https
              curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
              echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
              sudo apt-get update
              sudo apt-get install -y kubectl

          - name: Deploy to AKS
            run: |
              kubectl apply -f k8s/
          
          - name: Wait for Deployment rollout
            run: |
              kubectl rollout status deployment/churn-prediction --timeout=5m
                  
